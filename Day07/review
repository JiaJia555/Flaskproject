1. ORM增删改查
导入
    from sqlalchemy import create_engine, Column, Integer, String
    from sqlalchemy.ext.declarative import declarative_base
    from sqlalchemy.orm import sessionmaker

添加数据
    def add_data():
        article = Article(xxx)
        session.add(article)
        session.add_all([user1, user2])
        session.commit()

查询数据
    data = session.query(Article).all()
    data = session.query(Article).filter(Article.title=='python').all()
    data = session.query(Article).filter_by(title='Java').all()
    data = session.query(Article).first()
    data = session.query(Article).get(2)

修改数据
def update_data():
    article.title = 'lgcoder'
    # 回滚
    session.rollback()

删除数据
    def delete_data():
    session.delete(article)

2. sqlalchemy常用数据类型
• Integer：整形。
• Float：浮点类型。
• Boolean：传递True/False进去。
• DECIMAL：定点类型，比float更准确
• enum：枚举类型。
• Date：传递datetime.date()进去。
• DateTime：传递datetime.datetime()进去。
• Time：传递datetime.time()进去。
• String：字符类型，使用时需要指定长度，区别于Text类型。
• Text：文本类型。
• LONGTEXT：长文本类型。

3. Column常用参数
• default：默认值。
• nullable：是否可空。nullable = False 不允许为空
• primary_key：是否为主键。
• unique：是否唯一。 存放的内容是唯一的
• autoincrement：是否自动增长。
• onupdate：更新的时候执行的函数。
• name：该属性在数据库中的字段映射

4. query可用参数
    1. 模型对象。指定查找这个模型中所有的对象。
    2. 模型中的属性。可以指定只查找某个模型的其中几个属性。
    3. 聚合函数。
        • func.count：统计行的数量。
        • func.avg：求平均值。
        • func.max：求最大值。
        • func.min：求最小值。
        • func.sum：求和。
聚合函数使用：
    session.query(聚合函数(Article.price)).first()


__repr__() 方法是类的实例化对象用来做“自我介绍”的方法，默认情况下，
它会返回当前对象的“类名+object at+内存地址”，而如果对该方法进行重写，
可以为其制作自定义的自我描述信息。